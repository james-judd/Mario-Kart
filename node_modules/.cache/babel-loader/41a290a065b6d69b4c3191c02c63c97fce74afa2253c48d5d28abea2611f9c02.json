{"ast":null,"code":"var _jsxFileName = \"/Users/jamesjudd/gluon/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./MarioKartLogo.png\";\nimport \"./App.css\";\nimport { Race } from \"./Race.js\";\nimport images from \"./assets/christmas/backgrounds/images.js\";\nimport { getRandomInt } from \"./randomInt\";\nimport { useState } from \"react\";\nimport { TopPage } from \"./TopPage\";\nimport { MusicPlayer } from \"./MusicPlayer\";\nimport { Road } from \"./Road\";\nimport { Podium } from \"./Podium\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  console.log(\"app was re rendered\");\n  const [raceInProgress, setRaceInProgress] = useState(false);\n  const [results, setResults] = useState(null);\n  const renderStartPage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"start-button\",\n    children: /*#__PURE__*/_jsxDEV(TopPage, {\n      logo: logo,\n      changePage: () => setRaceInProgress(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n  const renderCorrectScreen = () => {\n    if (results) {\n      return /*#__PURE__*/_jsxDEV(Podium, {\n        results: results,\n        onRestart: () => {\n          setResults(null);\n          setRaceInProgress(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    }\n    return raceInProgress ? /*#__PURE__*/_jsxDEV(Race, {\n      setResults: setResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this) : renderStartPage();\n  };\n\n  // useEffect(() => {\n  //   console.log({ results });\n  // }, [results]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundImage: `url(${images[getRandomInt(0, images.length - 1)]})`\n        },\n        className: \"background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-png\",\n          children: [/*#__PURE__*/_jsxDEV(MusicPlayer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            className: \"App-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [renderCorrectScreen(), /*#__PURE__*/_jsxDEV(Road, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"T1LfCnkHLlwWZGebc6iLbQkZAhA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Race","images","getRandomInt","useState","TopPage","MusicPlayer","Road","Podium","App","console","log","raceInProgress","setRaceInProgress","results","setResults","renderStartPage","renderCorrectScreen","backgroundImage","length"],"sources":["/Users/jamesjudd/gluon/src/App.js"],"sourcesContent":["import logo from \"./MarioKartLogo.png\";\nimport \"./App.css\";\nimport { Race } from \"./Race.js\";\nimport images from \"./assets/christmas/backgrounds/images.js\";\nimport { getRandomInt } from \"./randomInt\";\nimport { useState } from \"react\";\nimport { TopPage } from \"./TopPage\";\nimport { MusicPlayer } from \"./MusicPlayer\";\nimport { Road } from \"./Road\";\nimport { Podium } from \"./Podium\";\n\nfunction App() {\n  console.log(\"app was re rendered\");\n  const [raceInProgress, setRaceInProgress] = useState(false);\n  const [results, setResults] = useState(null);\n\n  const renderStartPage = () => (\n    <div className=\"start-button\">\n      <TopPage logo={logo} changePage={() => setRaceInProgress(true)} />\n    </div>\n  );\n\n  const renderCorrectScreen = () => {\n    if (results) {\n      return (\n        <Podium\n          results={results}\n          onRestart={() => {\n            setResults(null);\n            setRaceInProgress(false);\n          }}\n        />\n      );\n    }\n\n    return raceInProgress ? (\n      <Race setResults={setResults} />\n    ) : (\n      renderStartPage()\n    );\n  };\n\n  // useEffect(() => {\n  //   console.log({ results });\n  // }, [results]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"background-container\">\n        <div\n          style={{\n            backgroundImage: `url(${\n              images[getRandomInt(0, images.length - 1)]\n            })`,\n          }}\n          className=\"background\"\n        />\n      </div>\n      <div className=\"content-container\">\n        <div className=\"header\">\n          <div className=\"logo-png\">\n            <MusicPlayer />\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </div>\n        </div>\n        <div>\n          {renderCorrectScreen()}\n          <Road />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,qBAAqB;AACtC,OAAO,WAAW;AAClB,SAASC,IAAI,QAAQ,WAAW;AAChC,OAAOC,MAAM,MAAM,0CAA0C;AAC7D,SAASC,YAAY,QAAQ,aAAa;AAC1C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,MAAM,QAAQ,UAAU;AAAC;AAElC,SAASC,GAAG,GAAG;EAAA;EACbC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMY,eAAe,GAAG,mBACtB;IAAK,SAAS,EAAC,cAAc;IAAA,uBAC3B,QAAC,OAAO;MAAC,IAAI,EAAEhB,IAAK;MAAC,UAAU,EAAE,MAAMa,iBAAiB,CAAC,IAAI;IAAE;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAErE;EAED,MAAMI,mBAAmB,GAAG,MAAM;IAChC,IAAIH,OAAO,EAAE;MACX,oBACE,QAAC,MAAM;QACL,OAAO,EAAEA,OAAQ;QACjB,SAAS,EAAE,MAAM;UACfC,UAAU,CAAC,IAAI,CAAC;UAChBF,iBAAiB,CAAC,KAAK,CAAC;QAC1B;MAAE;QAAA;QAAA;QAAA;MAAA,QACF;IAEN;IAEA,OAAOD,cAAc,gBACnB,QAAC,IAAI;MAAC,UAAU,EAAEG;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,GAEhCC,eAAe,EAChB;EACH,CAAC;;EAED;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBACnC;QACE,KAAK,EAAE;UACLE,eAAe,EAAG,OAChBhB,MAAM,CAACC,YAAY,CAAC,CAAC,EAAED,MAAM,CAACiB,MAAM,GAAG,CAAC,CAAC,CAC1C;QACH,CAAE;QACF,SAAS,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA;IACtB;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,SAAS,EAAC,mBAAmB;MAAA,wBAChC;QAAK,SAAS,EAAC,QAAQ;QAAA,uBACrB;UAAK,SAAS,EAAC,UAAU;UAAA,wBACvB,QAAC,WAAW;YAAA;YAAA;YAAA;UAAA,QAAG,eACf;YAAK,GAAG,EAAEnB,IAAK;YAAC,SAAS,EAAC,UAAU;YAAC,GAAG,EAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MAC9C;QAAA;QAAA;QAAA;MAAA,QACF,eACN;QAAA,WACGiB,mBAAmB,EAAE,eACtB,QAAC,IAAI;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA7DQR,GAAG;AAAA,KAAHA,GAAG;AA+DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}